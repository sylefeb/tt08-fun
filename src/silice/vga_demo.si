// SL 2024-08-27 @sylefeb
// ========================================================
// MIT license
// ========================================================

// VGA driver
$include('../common/vga.si')

// -------------------------

$include('doomhead.si')

// -------------------------

unit vga_demo(
  output! uint2 video_r,
  output! uint2 video_g,
  output! uint2 video_b,
  output! uint1 video_hs,
  output! uint1 video_vs,
) {

  vga vga;

  $doomhead$
  $sub666$

  uint1 prev_vs = uninitialized;
  uint1 prev_hs = uninitialized;
  uint9 frame   = 0;

  // #*#   ##   ##  ## ##
  // #  # #  # #  # # # #
  // #*#   ##   ##  #   #

  uint32 logo[] = {
    32b11011001100011000111,
    32b10101010010100101001,
    32b10001001100011000111,
    32b00000000000000000000,
  };

  int7   u  = 0;
  uint14 uT = 0;
  int7   v  = 0;
  uint14 vT = 0;

  always {

    //uint32 l_logo = logo[v[11,2]];
    //uint1  select = l_logo[u[10,5],1];

    //int16 ru = u - ((v * __signed(frame[0,8]))>>>8);
    //int16 rv = ((u * __signed(frame[0,8]))>>>8) + v;
    int7 ru = u - __signed(vT>>8);
    int7 rv = __signed(uT>>8) + v;

    uint1  select = ru[2,1] ^ rv[2,1];

    uint5  pid    = doomhead[{select^frame[3,1],rv[2,5],ru[2,5]}];
    uint18 pal    = pid == 0 ? 0 : sub666[pid];
/*
    uint4 p4      = {vga.vga_y[0,2],vga.vga_x[0,2]};
    uint2 q4      = p4[0,2] ^ p4[2,2];
    uint4 bval4   = {q4[0,1],p4[0,1], q4[1,1],p4[1,1]};

    uint2 l_r     = pal[16,2];
    uint2 h_r     = l_r != 2b11 ? (l_r + 2b01) : 2b11;
    uint2 l_g     = pal[10,2];
    uint2 h_g     = l_g != 2b11 ? (l_g + 2b01) : 2b11;
    uint2 l_b     = pal[ 4,2];
    uint2 h_b     = l_b != 2b11 ? (l_b + 2b01) : 2b11;

    video_r     = vga.active ? (pal[12,4]<bval4?l_r:h_r) : 0;
    video_g     = vga.active ? (pal[ 6,4]<bval4?l_b:h_g) : 0;
    video_b     = vga.active ? (pal[ 0,4]<bval4?l_g:h_b) : 0;
*/
    uint6 p6      = {vga.vga_x[0,3],vga.vga_y[0,3]};
    uint3 q6      = p6[0,3] ^ p6[3,3];
    uint6 bval6   = {q6[0,1], p6[0,1], q6[1,1],p6[1,1], q6[2,1],p6[2,1]};

    video_r     = vga.active ? {2{(pal[12,6]>bval6)}} : 0;
    video_g     = vga.active ? {2{(pal[ 6,6]>bval6)}} : 0;
    video_b     = vga.active ? {2{(pal[ 0,6]>bval6)}} : 0;

    video_hs    = vga.vga_hs;
    video_vs    = vga.vga_vs;

    uint1 frame_tick = prev_vs & ~vga.vga_vs;
    prev_vs          = vga.vga_vs;
    frame            = frame_tick ? (frame + 1) : frame;

    // uint5 step       = {frame[1,4] ^ {5{frame[5,1]}},1b1};


    uint8 tri = {frame[0,8] ^ {8{frame[8,1]}}};
    if (frame_tick) {
      __display("tick %d tri %d",frame,tri);
    }

    uint1 line_tick  = prev_hs & ~vga.vga_hs;
    prev_hs          = vga.vga_hs;
    u  = ~vga.vga_hs ? 0 : (u+1);
    uT = ~vga.vga_hs ? 0 : (uT+__signed(tri));
    v  = ~vga.vga_vs ? 0 : (line_tick ? (v+1) : v);
    vT = ~vga.vga_vs ? 0 : (line_tick ? (vT+__signed(tri)) : vT);

  }

}

// -------------------------
